// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PorterWebApi.Infra.Data.Context;

namespace PorterWebApi.Infra.Data.Migrations
{
    [DbContext(typeof(PorterContext))]
    partial class PorterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PorterWebApi.Domain.Entities.Apartamento", b =>
                {
                    b.Property<int>("ApartamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Andar")
                        .HasColumnType("int");

                    b.Property<int>("BlocoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("ApartamentoId");

                    b.HasIndex("BlocoId");

                    b.HasIndex("Numero", "BlocoId")
                        .IsUnique();

                    b.ToTable("Apartamentos");
                });

            modelBuilder.Entity("PorterWebApi.Domain.Entities.Bloco", b =>
                {
                    b.Property<int>("BlocoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CondominioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("BlocoId");

                    b.HasIndex("CondominioId");

                    b.HasIndex("Nome", "CondominioId")
                        .IsUnique();

                    b.ToTable("Blocos");
                });

            modelBuilder.Entity("PorterWebApi.Domain.Entities.Condominio", b =>
                {
                    b.Property<int>("CondominioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailSindico")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TelefoneSindico")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("CondominioId");

                    b.ToTable("Condominios");
                });

            modelBuilder.Entity("PorterWebApi.Domain.Entities.Morador", b =>
                {
                    b.Property<int>("MoradorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("Varchar(11)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("Date");

                    b.Property<string>("Email")
                        .HasColumnType("Varchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("Telefone")
                        .HasColumnType("Varchar(20)");

                    b.HasKey("MoradorId");

                    b.HasIndex("ApartamentoId");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.ToTable("Moradores");
                });

            modelBuilder.Entity("PorterWebApi.Domain.Entities.Apartamento", b =>
                {
                    b.HasOne("PorterWebApi.Domain.Entities.Bloco", null)
                        .WithMany()
                        .HasForeignKey("BlocoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PorterWebApi.Domain.Entities.Bloco", b =>
                {
                    b.HasOne("PorterWebApi.Domain.Entities.Condominio", null)
                        .WithMany()
                        .HasForeignKey("CondominioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PorterWebApi.Domain.Entities.Morador", b =>
                {
                    b.HasOne("PorterWebApi.Domain.Entities.Apartamento", null)
                        .WithMany()
                        .HasForeignKey("ApartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
